!function(window){function WebRTC(){function myMedia(){getUserMedia(constraint,function(stream){me.stream=stream,queue.forEach(function(item){var peer=item.peer;peer.addStream(me.stream),peer.continue(item)})},function(err){console.log(err)})}function get(user,stream){return void 0===user?s[stream]:s[stream][user]}var webrtc={},me={stream:null,id:null},rtc={},users={},constraint={audio:!0,video:!0},chats=[],s={streams:{},videoStreams:{},audioStreams:{},dataStreams:{}};try{myMedia()}catch(e){console.log(e)}var queue=[];return webrtc.queue=function(item){queue.push(item)},webrtc.getStream=function(user){return get(user,"streams")},webrtc.getVideoStream=function(user){return get(user,"videoStreams")},webrtc.getAudioStream=function(user){return get(user,"audioStreams")},webrtc.getDataStream=function(user){return webrtc.getRTC(user).chat},webrtc.getRTC=function(user){return rtc[user]},webrtc.getUserChat=function(user){return webrtc.getDataStream(user)},webrtc.getChats=function(){var messages=chats.slice();return chats=[],messages},webrtc.sendChat=function(message){var users=Object.keys(s.dataStreams);users.forEach(function(user){webrtc.getUserChat(user).send(message)})},webrtc.setRTC=function(user,peerConnection){rtc[user]=peerConnection;window.ourMeeting.ChatSetup(user,peerConnection.chat,chats)},webrtc.addStream=function(user,stream){try{console.log(stream,"STREAM!!!"),s.streams[user]=stream,s.videoStreams[user]=stream.getVideoTracks(),s.audioStreams[user]=stream.getAudioTracks()}catch(e){console.log(e)}},webrtc.addUser=function(user){users[user]=!0},webrtc.getUser=function(user){return users[user]},webrtc.getAllUsers=function(){return Object.keys(users)},webrtc.getUserInfo=function(user){var userInfo={};return userInfo.stream=webrtc.getStream(user),userInfo.videoStream=webrtc.getVideoStream(user),userInfo.audioStream=webrtc.getAudioStream(user),userInfo.dataStream=webrtc.getDataStream(user),userInfo},webrtc.setId=function(id){me.id=id},webrtc.getMyInfo=function(){return me},webrtc.users=users,webrtc}void 0===window.ourMeeting&&(window.ourMeeting={}),window.ourMeeting.webrtc=WebRTC}(window),function(window){function Signaller(){function address(to,from,dataObj){return dataObj.to=to,dataObj.from=from,dataObj}var socket=io.connect("/manager");socket.on("error",function(err){console.log("socket error",err)});var priorityEvents={waitForAck:!0},priority={};return{socket:socket,hs:sync,address:address,priority:function(data){var userPriorities=priority[data.from];if(userPriorities){var pri=userPriorities[data.Status]-data.priority;return delete priority[data.from],pri}return 1},send:function(evt,data){console.log("sending signal",evt,data),socket.emit("signal",evt,data)},on:function(evt,callback){socket.on(evt,callback)},handshake:function(evt,data){priorityEvents[data.Status]&&(priority[data.to]={},data.priority=priority[data.to][data.Status]=Date.now()),socket.emit("handshake",evt,data)}}}function sync(timeout,signaller){function getPeer(id){return peers[id]}function address(from,to,data){return signaller.address(to,from,{Status:data})}console.log("in hs");var hs={},peers={};return hs.addPeer=function(id,rtc){rtc.SentOffer=!1,peers[id]=rtc},hs.removePeer=function(id){delete peers[id]},signaller.on("handshake",function(evt,data){console.log("evt recv",data.Status,data.from);var user=data.from,me=data.to,peer=getPeer(user);if(console.log("my status",peer.Status),void 0===peer.Status)return void signaller.emit("cancel",address(me,user,void 0));if("ack"===evt)"receive"===data.Status&&"sender"===peer.Status?(console.log("matched init wrtc"),peer.SentOffer||peer.checkForStream(function(){peer.offer(),peer.SentOffer=!0})):"waiting"===peer.Status?"sender"===data.Status&&(peer.Status="receive",signaller.handshake("ack",address(me,user,peer.Status))):"receive"===peer.Status&&"sender"===data.Status&&signaller.handshake("ack",address(me,user,peer.Status));else if("cancel"===evt)peer.Status="waiting";else if("query"===evt){var message=address(me,user,peer.Status);message.expect="sender"===peer.Status?"receive":"sender",signaller.handshake("answer-query",message)}else"answer-query"===evt&&(peer.Retry=0,peer.Status=data.expect,signaller.handshake("ack",address(me,user,peer.Status)))}),console.log(hs),hs}void 0===window.ourMeeting&&(window.ourMeeting={}),window.ourMeeting.Signaller=Signaller}(window),function(window){function RTC(WebRTC,Signaller){function createRTC(user){function wrapData(info){return{from:WebRTC.getMyInfo().id,to:user,data:info}}var ice=[],peer=new RTCPeerConnection({iceServers:[{urls:"stun:stun.iptel.org"}]});return peer.chat=peer.createDataChannel("om-chat"),peer.checkForStream=function(success){var myStream=WebRTC.getMyInfo().stream;myStream?(peer.addStream(myStream),success()):setTimeout(function(){peer.checkForStream(success)},3e3)},peer.hasLocalDescription=function(){return!!this.localDescription},peer.hasRemoteDescription=function(){return!!this.remoteDescription},peer.queueIce=function(candidate){ice.push(candidate)},peer.processIce=function(){peer.hasLocalDescription()&&peer.hasRemoteDescription?ice.forEach(function(candidate,i,arr){peer.addIceCandidate(new RTCIceCandidate(candidate)),arr.splice(i,1)}):setTimeout(function(){peer.processIce()},2e3)},peer.onaddstream=function(stream){WebRTC.addStream(user,stream.stream)},peer.onicecandidate=function(event){event.candidate&&signaller.send("ice",wrapData(event.candidate))},peer.offer=function(){this.createOffer(function(description){peer.setLocalDescription(description,function(){Signaller.send("offer",wrapData(description))},console.log)},console.log)},peer.answer=function(){this.createAnswer(function(description){peer.setLocalDescription(description,function(){Signaller.send("answer",wrapData(description)),peer.processIce()},console.log)},console.log)},peer.onAnswer=function(description){if("offer"!==description.type)try{this.setRemoteDescription(new RTCSessionDescription(description),function(){peer.processIce()},console.log)}catch(e){console.log(e)}},peer.onOffer=function(description){if("answer"!==description.type){console.log("rec descr",description);try{peer.setRemoteDescription(new RTCSessionDescription(description),function(){peer.answer()},console.log)}catch(e){console.log(e)}}},peer.ready=!1,peer}var rtc={};return Signaller.on("signal",function(evt,data){try{var peer=WebRTC.getRTC(data.from);if("offer"===evt)console.log(data),peer.checkForStream(function(){peer.onOffer(data.data)});else if("answer"===evt)peer.checkForStream(function(){peer.onAnswer(data.data)});else if("ice"===evt)peer.queueIce(data.data);else{if("ready"!==evt)throw new Error("Unknown signal "+evt);peer.processIce()}}catch(e){console.log(e)}}),rtc.newPeer=function(user){return WebRTC.setRTC(user,createRTC(user)),WebRTC.getUserInfo(user)},rtc}void 0===window.ourMeeting&&(window.ourMeeting={}),window.ourMeeting.RTC=RTC}(window),function(obj){{var webrtc=obj.ourMeeting.webrtc(),signaller=obj.ourMeeting.Signaller();obj.ourMeeting.RTC(webrtc,signaller)}obj.ourMeeting=function(){},obj.ourMeeting.prototype.whiteboard={insert:function(){}},obj.ourMeeting.prototype.meeting={getMeeting:function(){},invitedUsers:function(){},connectedUsers:function(){},sendMessage:function(){},retreiveMessages:function(){}},obj.ourMeeting.prototype.admin={createMeeting:function(){},openMeetings:function(){},findUser:function(){},closeMeeting:function(){}},obj.ourMeeting.prototype.currentUser={joinMeeting:function(){},checkInvites:function(){},name:"name",getStreams:function(){},leaveMeeting:function(){}}}(window),angular.module("ourMeeting",[]).controller("ourMeetingCtrl",["$scope","$timeout","$interval",function($scope,$timeout,$interval){$scope.meeting={users:[]};var userCheck=$interval(function(){$scope.meeting.users=webrtc.getAllUsers(),$scope.meeting.users.forEach(function(id){$scope.attachVideos(id)})},5e3);$scope.meeting.videos={},$scope.attachVideos=function(id){if(void 0===$scope.meeting.videos[id]){var stream=webrtc.getStream(id);if(void 0!==stream&&null!==stream){$scope.meeting.videos[id]=stream;var parent=document.getElementById(id);attachMediaStream(parent,stream)===!1&&($scope.meeting.videos[id]=void 0)}}},$scope.attachToWhiteboard=function(id){var whiteboard=document.getElementById("whiteboard");if(whiteboard.childNodes.length>0){var old_video=whiteboard.childNodes[0],elem=document.getElementsByClassName(old_video.id)[0];elem.appendChild(old_video),elem.childNodes[0].play()}var video=document.getElementById(id);whiteboard.innerHTML="",whiteboard.appendChild(video),whiteboard.childNodes[0].play()},$scope.$on("new-user",function(data){var log=data||"heya";console.log(log)}),$scope.$on("$destroy",function(){$interval.cancel(userCheck)})}]).directive("omMeeting",function(){return{restrict:"E",transclude:!0,template:"<om-whiteboard></om-whiteboard><om-users></om-users><om-chat></om-chat>"}}).directive("omWhiteboard",function(){return{restrict:"E",template:'<div id="whiteboard"></div>'}}).directive("omUsers",function(){return{restrict:"E",template:'<ul class="users"><li class="{{user}}" ng-click="attachToWhiteboard(user)" ng-repeat="user in meeting.users"><video id="{{user}}" autoplay></li></ul>'}}).directive("omChat",function(){return{restrict:"E",template:'<ul class="chat"><li ng-repeat="chat in meeting.chat">{{chat.name}}: {{chat.message}}</li></ul>'}});